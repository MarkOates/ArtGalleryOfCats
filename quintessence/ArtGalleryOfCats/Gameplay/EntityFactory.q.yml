properties:


  - name: bitmap_bin
    type: AllegroFlare::BitmapBin*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: model_bin
    type: AllegroFlare::ModelBin*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true


functions:


  - name: create_environment_mesh
    type: ArtGalleryOfCats::Gameplay::Entities::Base*
    guards: [ bitmap_bin, model_bin ]
    body: |
      ArtGalleryOfCats::Gameplay::Entities::Base* result = new ArtGalleryOfCats::Gameplay::Entities::Base();

      std::string model_filename = "gallery-map-02.obj";
      //std::string model_filename = "agc-map-04.obj";
      //model_bin->preload(model_filename);
      AllegroFlare::Model3D* model = model_bin->auto_get(model_filename);

      std::string texture_filename = "gallery-map-02.png";
      //std::string texture_filename = "agc-map-04.png";
      //bitmap_bin->preload(texture_filename);
      ALLEGRO_BITMAP *texture = bitmap_bin->auto_get(texture_filename);

      result->set_model(model);
      result->set_texture(texture);

      return result;


  - name: create_camera
    type: ArtGalleryOfCats::Gameplay::Entities::Camera3D*
    body: |
      ArtGalleryOfCats::Gameplay::Entities::Camera3D* result = new ArtGalleryOfCats::Gameplay::Entities::Camera3D();

      result->stepout = { 0, 1.0, 0 };
      //camera.stepout = {0, 1.0, 4};  // step back from the origin
      result->tilt = 0.13;            // look up(-)/down(+)
      result->spin = 0.0;             // set a good start initial spin
      //result->spin = 0.2;             // set a good start initial spin

      return result;


  - name: create_collision_tile_map
    type: ArtGalleryOfCats::Gameplay::Entities::CollisionTileMap*
    body: |
      ArtGalleryOfCats::Gameplay::Entities::CollisionTileMap* result =
         new ArtGalleryOfCats::Gameplay::Entities::CollisionTileMap();

      AllegroFlare::TileMaps::TileMap<int> &collision_tile_map = result->get_collision_tile_map_ref();
      collision_tile_map.resize(10, 10);
      //collision_tile_map.resize(10, 10);

      std::string tmj_filename = "tests/fixtures/maps/gallery-map-02.tmj"; // TODO: Fix this path
      AllegroFlare::Prototypes::Platforming2D::TMJDataLoader tmj_data_loader(tmj_filename);
      tmj_data_loader.load();

      return result;
    body_dependency_symbols:
     - AllegroFlare::Prototypes::Platforming2D::TMJDataLoader


dependencies:


  - symbol: ArtGalleryOfCats::Gameplay::Entities::Base
    headers: [ ArtGalleryOfCats/Gameplay/Entities/Base.hpp ]
  - symbol: AllegroFlare::BitmapBin
    headers: [ AllegroFlare/BitmapBin.hpp ]
  - symbol: AllegroFlare::FontBin
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: AllegroFlare::ModelBin
    headers: [ AllegroFlare/ModelBin.hpp ]
  - symbol: ArtGalleryOfCats::Gameplay::Entities::Camera3D
    headers: [ ArtGalleryOfCats/Gameplay/Entities/Camera3D.hpp ]
  - symbol: ArtGalleryOfCats::Gameplay::Entities::CollisionTileMap
    headers: [ ArtGalleryOfCats/Gameplay/Entities/CollisionTileMap.hpp ]
  - symbol: AllegroFlare::Prototypes::Platforming2D::TMJDataLoader
    headers: [ AllegroFlare/Prototypes/Platforming2D/TMJDataLoader.hpp ]


