properties:


  - name: riddle_text
    type: std::string
    init_with: '"[unset-riddle_text]"'
    constructor_arg: true
    getter: true
    setter: true

  - name: riddle_prompt_text
    type: std::string
    init_with: '"[unset-prompt_text]"'
    constructor_arg: true
    getter: true
    setter: true

  - name: riddle_answer
    type: std::string
    init_with: '"[unset-riddle_answer]"'
    constructor_arg: true
    getter: true
    setter: true


functions:


  - name: matches_answer
    type: bool
    parameters:
      - name: answer_guess
        type: std::string
        default_argument: '"[unset-answer_guess]"'
    body: |
      std::string filtered_answer_guess = answer_guess;
      std::string filtered_riddle_answer = riddle_answer;

      for (char &c : filtered_answer_guess) { c = std::tolower(c); }
      for (char &c : filtered_riddle_answer) { c = std::tolower(c); }

      // TODO: Account for additional rules (case insensitive, etc)
      if (filtered_answer_guess == filtered_riddle_answer) return true;
      return false;
    


