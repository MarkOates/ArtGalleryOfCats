<!DOCTYPE html>
<head>
<style>
*
{
  font-family: 'Arial';
  padding: 3px 20px;
}
table td
{
  padding: 3px 20px;
}
.property
{
  color: blue;
}
.private_property
{
  color: lightblue;
}

.method
{
  color: red;
}

.private_method
{
  color: pink;
}

.dependency
{
  color: green;
}

.component
{
  padding: 20 10 20 10;
  margin: 20 10 20 10;
  background-color: #dfdfdf;
}

.component h3
{
}
</style>
</head>
<body>
<h1>TOC</h1>
<ul>
  <li><a href="#quintessence/ArtGalleryOfCats/Gameplay/Entities/Base.q.yml">quintessence/ArtGalleryOfCats/Gameplay/Entities/Base.q.yml</a></li>
  <li><a href="#quintessence/ArtGalleryOfCats/Gameplay/Entities/Camera3D.q.yml">quintessence/ArtGalleryOfCats/Gameplay/Entities/Camera3D.q.yml</a></li>
  <li><a href="#quintessence/ArtGalleryOfCats/Gameplay/EntityFactory.q.yml">quintessence/ArtGalleryOfCats/Gameplay/EntityFactory.q.yml</a></li>
  <li><a href="#quintessence/ArtGalleryOfCats/Gameplay/Screen.q.yml">quintessence/ArtGalleryOfCats/Gameplay/Screen.q.yml</a></li>
  <li><a href="#quintessence/ArtGalleryOfCats/Runner.q.yml">quintessence/ArtGalleryOfCats/Runner.q.yml</a></li>
</ul>
<h1>Components</h1>
<ul>
  <div class="component">
    <h3 id="quintessence/ArtGalleryOfCats/Gameplay/Entities/Base.q.yml">quintessence/ArtGalleryOfCats/Gameplay/Entities/Base.q.yml</h3>
     <table>
<tr>
  <td class="property">type</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">model</td>
  <td class="property">AllegroFlare::Model3D*</td>
</tr>
<tr>
  <td class="property">texture</td>
  <td class="property">ALLEGRO_BITMAP*</td>
</tr>
<tr>
  <td class="property">placement</td>
  <td class="property">AllegroFlare::Placement3D</td>
</tr>
<tr>
  <td class="property">velocity</td>
  <td class="property">AllegroFlare::Placement3D</td>
</tr>
<tr>
  <td class="property">TYPE</td>
  <td class="property">char*</td>
</tr>
    </table>
     <table>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::SceneGraph::Entities::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/SceneGraph/Entities/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Model3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Model3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ALLEGRO_BITMAP&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Placement3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Placement3D.hpp&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<ul>
  <div class="component">
    <h3 id="quintessence/ArtGalleryOfCats/Gameplay/Entities/Camera3D.q.yml">quintessence/ArtGalleryOfCats/Gameplay/Entities/Camera3D.q.yml</h3>
     <table>
<tr>
  <td class="property">type</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">TYPE</td>
  <td class="property">char*</td>
</tr>
    </table>
     <table>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ArtGalleryOfCats::Gameplay::Entities::Base&quot;, &quot;headers&quot;=&gt;[&quot;ArtGalleryOfCats/Gameplay/Entities/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Camera3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Camera3D.hpp&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<ul>
  <div class="component">
    <h3 id="quintessence/ArtGalleryOfCats/Gameplay/EntityFactory.q.yml">quintessence/ArtGalleryOfCats/Gameplay/EntityFactory.q.yml</h3>
     <table>
<tr>
  <td class="property">bitmap_bin</td>
  <td class="property">AllegroFlare::BitmapBin*</td>
</tr>
<tr>
  <td class="property">font_bin</td>
  <td class="property">AllegroFlare::FontBin*</td>
</tr>
<tr>
  <td class="property">model_bin</td>
  <td class="property">AllegroFlare::ModelBin*</td>
</tr>
    </table>
     <table>
<tr>
  <td class="method">create_environment_mesh()</td>
</tr>
<tr>
  <td class="method">create_camera()</td>
</tr>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ArtGalleryOfCats::Gameplay::Entities::Base&quot;, &quot;headers&quot;=&gt;[&quot;ArtGalleryOfCats/Gameplay/Entities/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::BitmapBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/BitmapBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::FontBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/FontBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::ModelBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/ModelBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ArtGalleryOfCats::Gameplay::Entities::Camera3D&quot;, &quot;headers&quot;=&gt;[&quot;ArtGalleryOfCats/Gameplay/Entities/Camera3D.hpp&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<ul>
  <div class="component">
    <h3 id="quintessence/ArtGalleryOfCats/Gameplay/Screen.q.yml">quintessence/ArtGalleryOfCats/Gameplay/Screen.q.yml</h3>
     <table>
<tr>
  <td class="property">event_emitter</td>
  <td class="property">AllegroFlare::EventEmitter*</td>
</tr>
<tr>
  <td class="property">bitmap_bin</td>
  <td class="property">AllegroFlare::BitmapBin*</td>
</tr>
<tr>
  <td class="property">font_bin</td>
  <td class="property">AllegroFlare::FontBin*</td>
</tr>
<tr>
  <td class="property">model_bin</td>
  <td class="property">AllegroFlare::ModelBin*</td>
</tr>
<tr>
  <td class="property">entity_pool</td>
  <td class="property">AllegroFlare::SceneGraph::EntityPool</td>
</tr>
<tr>
  <td class="property">current_level_identifier</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">current_level</td>
  <td class="property">void*</td>
</tr>
<tr>
  <td class="property">on_finished_callback_func</td>
  <td class="property">std::function&lt;void(ArtGalleryOfCats::Gameplay::Screen*, void*)&gt;</td>
</tr>
<tr>
  <td class="property">on_finished_callback_func_user_data</td>
  <td class="property">void*</td>
</tr>
<tr>
  <td class="property">initialized</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">TYPE</td>
  <td class="property">char*</td>
</tr>
    </table>
     <table>
<tr>
  <td class="method">set_event_emitter(AllegroFlare::EventEmitter* event_emitter=nullptr)</td>
</tr>
<tr>
  <td class="method">set_bitmap_bin(AllegroFlare::BitmapBin* bitmap_bin=nullptr)</td>
</tr>
<tr>
  <td class="method">set_font_bin(AllegroFlare::FontBin* font_bin=nullptr)</td>
</tr>
<tr>
  <td class="method">set_model_bin(AllegroFlare::ModelBin* model_bin=nullptr)</td>
</tr>
<tr>
  <td class="method">load_level_by_identifier(std::string level_identifier=&quot;[unset-level_identifier]&quot;)</td>
</tr>
<tr>
  <td class="private_method">load_level()</td>
</tr>
<tr>
  <td class="method">initialize()</td>
</tr>
<tr>
  <td class="method">on_activate()</td>
</tr>
<tr>
  <td class="method">on_deactivate()</td>
</tr>
<tr>
  <td class="method">update()</td>
</tr>
<tr>
  <td class="private_method">scene_physics_updater()</td>
</tr>
<tr>
  <td class="method">render()</td>
</tr>
<tr>
  <td class="private_method">scene_renderer_render()</td>
</tr>
<tr>
  <td class="method">call_on_finished_callback_func()</td>
</tr>
<tr>
  <td class="method">primary_timer_func()</td>
</tr>
<tr>
  <td class="method">player_spin_change(float delta=0.0f)</td>
</tr>
<tr>
  <td class="method">player_stop_moving()</td>
</tr>
<tr>
  <td class="method">player_strafe_right()</td>
</tr>
<tr>
  <td class="method">player_strafe_left()</td>
</tr>
<tr>
  <td class="method">player_move_forward()</td>
</tr>
<tr>
  <td class="method">player_move_backward()</td>
</tr>
<tr>
  <td class="method">virtual_control_button_up_func(AllegroFlare::Player* player=nullptr, AllegroFlare::VirtualControllers::Base* virtual_controller=nullptr, int virtual_controller_button_num=0, bool is_repeat=false)</td>
</tr>
<tr>
  <td class="method">virtual_control_button_down_func(AllegroFlare::Player* player=nullptr, AllegroFlare::VirtualControllers::Base* virtual_controller=nullptr, int virtual_controller_button_num=0, bool is_repeat=false)</td>
</tr>
<tr>
  <td class="method">virtual_control_axis_change_func(ALLEGRO_EVENT* ev=nullptr)</td>
</tr>
<tr>
  <td class="method">mouse_axes_func(ALLEGRO_EVENT* ev=nullptr)</td>
</tr>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ALLEGRO_EVENT&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::BitmapBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/BitmapBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::EventEmitter&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/EventEmitter.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::FontBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/FontBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::ModelBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/ModelBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;al_is_primitives_addon_initialized&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro_primitives.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Player&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Player.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::VirtualControllers::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/VirtualControllers/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ArtGalleryOfCats::Gameplay::Screen&quot;, &quot;headers&quot;=&gt;[&quot;ArtGalleryOfCats/Gameplay/Screen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::SceneGraph::EntityPool&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/SceneGraph/EntityPool.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ArtGalleryOfCats::Gameplay::EntityFactory&quot;, &quot;headers&quot;=&gt;[&quot;ArtGalleryOfCats/Gameplay/EntityFactory.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ArtGalleryOfCats::Gameplay::Entities::Base&quot;, &quot;headers&quot;=&gt;[&quot;ArtGalleryOfCats/Gameplay/Entities/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ArtGalleryOfCats::Gameplay::Entities::Camera3D&quot;, &quot;headers&quot;=&gt;[&quot;ArtGalleryOfCats/Gameplay/Entities/Camera3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::VirtualControllers::GenericController&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/VirtualControllers/GenericController.hpp&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<ul>
  <div class="component">
    <h3 id="quintessence/ArtGalleryOfCats/Runner.q.yml">quintessence/ArtGalleryOfCats/Runner.q.yml</h3>
     <table>
<tr>
  <td class="property">framework</td>
  <td class="property">AllegroFlare::Frameworks::Full*</td>
</tr>
<tr>
  <td class="property">event_emitter</td>
  <td class="property">AllegroFlare::EventEmitter*</td>
</tr>
<tr>
  <td class="property">bitmap_bin</td>
  <td class="property">AllegroFlare::BitmapBin*</td>
</tr>
<tr>
  <td class="property">font_bin</td>
  <td class="property">AllegroFlare::FontBin*</td>
</tr>
<tr>
  <td class="property">model_bin</td>
  <td class="property">AllegroFlare::ModelBin*</td>
</tr>
<tr>
  <td class="property">router</td>
  <td class="property">AllegroFlare::Routers::Standard</td>
</tr>
<tr>
  <td class="property">intro_logos_screen</td>
  <td class="property">AllegroFlare::Screens::Storyboard</td>
</tr>
<tr>
  <td class="property">intro_storyboard_screen</td>
  <td class="property">AllegroFlare::Screens::Storyboard</td>
</tr>
<tr>
  <td class="property">title_screen</td>
  <td class="property">AllegroFlare::Screens::TitleScreen</td>
</tr>
<tr>
  <td class="property">achievements_screen</td>
  <td class="property">AllegroFlare::Screens::Achievements</td>
</tr>
<tr>
  <td class="property">version_screen</td>
  <td class="property">AllegroFlare::Screens::Version</td>
</tr>
<tr>
  <td class="property">new_game_intro_storyboard_screen</td>
  <td class="property">AllegroFlare::Screens::Storyboard</td>
</tr>
<tr>
  <td class="property">level_select_screen</td>
  <td class="property">AllegroFlare::Screens::LevelSelectScreen</td>
</tr>
<tr>
  <td class="property">game_over_screen</td>
  <td class="property">AllegroFlare::Screens::GameOverScreen</td>
</tr>
<tr>
  <td class="property">game_won_screen</td>
  <td class="property">AllegroFlare::Screens::GameWonScreen</td>
</tr>
<tr>
  <td class="property">game_won_outro_storyboard_screen</td>
  <td class="property">AllegroFlare::Screens::Storyboard</td>
</tr>
<tr>
  <td class="property">rolling_credits_screen</td>
  <td class="property">AllegroFlare::Screens::RollingCredits</td>
</tr>
<tr>
  <td class="property">primary_gameplay_screen</td>
  <td class="property">ArtGalleryOfCats::Gameplay::Screen</td>
</tr>
<tr>
  <td class="property">solid_black_background</td>
  <td class="property">AllegroFlare::Elements::Backgrounds::ClearToColor</td>
</tr>
<tr>
  <td class="property">release_info</td>
  <td class="property">ReleaseInfo</td>
</tr>
<tr>
  <td class="property">initialized</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">EVENT_ACTIVATE_PRIMARY_GAMEPLAY_SCREEN</td>
  <td class="property">char*</td>
</tr>
<tr>
  <td class="property">TYPE</td>
  <td class="property">char*</td>
</tr>
    </table>
     <table>
<tr>
  <td class="method">initialize()</td>
</tr>
<tr>
  <td class="method">setup_router()</td>
</tr>
<tr>
  <td class="method">run(std::string deployment_environment_mode=&quot;[unset-deployment_environment_mode]&quot;)</td>
</tr>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::EventEmitter&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/EventEmitter.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Frameworks::Full&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Frameworks/Full.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::BitmapBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/BitmapBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::FontBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/FontBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::ModelBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/ModelBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::GameEvent&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/GameEvent.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;CubeShooter::Screen&quot;, &quot;headers&quot;=&gt;[&quot;CubeShooter/Screen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Routers::Standard&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Routers/Standard.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::Storyboard&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/Storyboard.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::Achievements&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/Achievements.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::TitleScreen&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/TitleScreen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::GameOverScreen&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/GameOverScreen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::GameWonScreen&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/GameWonScreen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::RollingCredits&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/RollingCredits.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::Version&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/Version.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Achievements&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Achievements.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::StoryboardFactory&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/StoryboardFactory.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Logger&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Logger.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::LevelSelectScreen&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/LevelSelectScreen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::RouteEventDatas::StartLevel&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/RouteEventDatas/StartLevel.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ArtGalleryOfCats::Gameplay::Screen&quot;, &quot;headers&quot;=&gt;[&quot;ArtGalleryOfCats/Gameplay/Screen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Color&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Color.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Elements::Backgrounds::ClearToColor&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Elements/Backgrounds/ClearToColor.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ReleaseInfo&quot;, &quot;headers&quot;=&gt;[&quot;ReleaseInfo.hpp&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<h1>Dependents</h1>
<pre>
{
  "AllegroFlare/SceneGraph/Entities/Base": [
    "ArtGalleryOfCats/Gameplay/Entities/Base"
  ],
  "AllegroFlare/Model3D": [
    "ArtGalleryOfCats/Gameplay/Entities/Base"
  ],
  "ALLEGRO_BITMAP": [
    "ArtGalleryOfCats/Gameplay/Entities/Base"
  ],
  "AllegroFlare/Placement3D": [
    "ArtGalleryOfCats/Gameplay/Entities/Base"
  ],
  "ArtGalleryOfCats/Gameplay/Entities/Base": [
    "ArtGalleryOfCats/Gameplay/Entities/Camera3D",
    "ArtGalleryOfCats/Gameplay/EntityFactory",
    "ArtGalleryOfCats/Gameplay/Screen"
  ],
  "AllegroFlare/Camera3D": [
    "ArtGalleryOfCats/Gameplay/Entities/Camera3D"
  ],
  "AllegroFlare/BitmapBin": [
    "ArtGalleryOfCats/Gameplay/EntityFactory",
    "ArtGalleryOfCats/Gameplay/Screen",
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/FontBin": [
    "ArtGalleryOfCats/Gameplay/EntityFactory",
    "ArtGalleryOfCats/Gameplay/Screen",
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/ModelBin": [
    "ArtGalleryOfCats/Gameplay/EntityFactory",
    "ArtGalleryOfCats/Gameplay/Screen",
    "ArtGalleryOfCats/Runner"
  ],
  "ArtGalleryOfCats/Gameplay/Entities/Camera3D": [
    "ArtGalleryOfCats/Gameplay/EntityFactory",
    "ArtGalleryOfCats/Gameplay/Screen"
  ],
  "ALLEGRO_EVENT": [
    "ArtGalleryOfCats/Gameplay/Screen"
  ],
  "AllegroFlare/Screens/Base": [
    "ArtGalleryOfCats/Gameplay/Screen",
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/EventEmitter": [
    "ArtGalleryOfCats/Gameplay/Screen",
    "ArtGalleryOfCats/Runner"
  ],
  "al_is_primitives_addon_initialized": [
    "ArtGalleryOfCats/Gameplay/Screen"
  ],
  "AllegroFlare/Player": [
    "ArtGalleryOfCats/Gameplay/Screen"
  ],
  "AllegroFlare/VirtualControllers/Base": [
    "ArtGalleryOfCats/Gameplay/Screen"
  ],
  "ArtGalleryOfCats/Gameplay/Screen": [
    "ArtGalleryOfCats/Gameplay/Screen",
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/SceneGraph/EntityPool": [
    "ArtGalleryOfCats/Gameplay/Screen"
  ],
  "ArtGalleryOfCats/Gameplay/EntityFactory": [
    "ArtGalleryOfCats/Gameplay/Screen"
  ],
  "AllegroFlare/VirtualControllers/GenericController": [
    "ArtGalleryOfCats/Gameplay/Screen"
  ],
  "AllegroFlare/Frameworks/Full": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/GameEvent": [
    "ArtGalleryOfCats/Runner"
  ],
  "CubeShooter/Screen": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Routers/Standard": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Screens/Storyboard": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Screens/Achievements": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Screens/TitleScreen": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Screens/GameOverScreen": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Screens/GameWonScreen": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Screens/RollingCredits": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Screens/Version": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Achievements": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/StoryboardFactory": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Logger": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Screens/LevelSelectScreen": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/RouteEventDatas/StartLevel": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Color": [
    "ArtGalleryOfCats/Runner"
  ],
  "AllegroFlare/Elements/Backgrounds/ClearToColor": [
    "ArtGalleryOfCats/Runner"
  ],
  "ReleaseInfo": [
    "ArtGalleryOfCats/Runner"
  ]
}
</pre>
</body>